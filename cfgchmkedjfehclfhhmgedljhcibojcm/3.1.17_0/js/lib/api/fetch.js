class BaseFetch{async fetch(e,t){throw new Error("Not implemented")}}class ForegroundFetch extends BaseFetch{async fetch(e,t){return this.#sendBackgroundFetch(e,t)}async fetchLargeJSON(e,t){e=await this.#sendBackgroundFetch(e,{...t,responseType:"text"});return JSON.parse(e)}async#sendBackgroundFetch(e,t){e=await eagle.runtime.sendMessage("fetch",{url:e,options:t});if(e.error)throw new Error(e.error);return e}}class BackgroundFetch extends BaseFetch{#TIMEOUT=2e4;constructor(){super(),eagle.runtime.onMessage("fetch",async(e,t,r)=>{const{url:s,options:c}=e;if(c?.body&&c.body instanceof Object)for(var a in c.body)null!==c.body[a]&&void 0!==c.body[a]||delete c.body[a];if("application/json"!==c?.headers?.["Content-Type"]&&c?.body){for(const[i,d]of Object.entries(c.body))Array.isArray(d)&&(d.forEach((e,t)=>{c.body[i+`[${t}]`]=e}),delete c.body[i]);c.body=new URLSearchParams(c.body)}try{var o,n=await this.fetch(s,c),h=n.headers.get("content-type");h&&h.includes("application/json")?"text"===c?.responseType?r(await n.text()):(o=await n.json(),"opaqueredirect"==n.type&&(o.isRedirect=!0),r(o)):r({status:n.status,statusText:n.statusText,ok:n.ok,type:n.type,url:n.url,redirected:n.redirected})}catch(e){r({error:e.message})}return!0})}async fetch(e,t){var r=t&&t.timeout||this.#TIMEOUT;return this.timeoutPromise(fetch(e,t),r)}timeoutPromise(e,c){return new Promise((t,r)=>{const s=setTimeout(()=>{r(new Error("TIMEOUT"))},c);e.then(e=>{clearTimeout(s),t(e)}).catch(e=>{clearTimeout(s),r(e)})})}}class Fetch{_fetch;constructor(){!eagle.env.isBackground()||eagle.env.isPopup()||eagle.env.isCollectWindow()||eagle.env.isBatchSaverWindow()?this._fetch=new ForegroundFetch:this._fetch=new BackgroundFetch}async fetch(e,t){return this._fetch.fetch(e,t)}async fetchLargeJSON(e,t){return this._fetch.fetchLargeJSON(e,t)}}(()=>{const r=new Fetch;eagle.fetch=(e,t)=>r.fetch(e,t),eagle.fetchLargeJSON=(e,t)=>r.fetchLargeJSON(e,t)})();