class BaseStorage{method=null;constructor(e){this.method=e}async get(e){}async set(e){}}class ChromeStorage extends BaseStorage{async get(t){return new Promise((r,e)=>{chrome.storage[this.method].get(t,e=>{r(e)})})}async set(t){return new Promise((e,r)=>{chrome.storage[this.method].set(t,()=>{e()})})}async clear(){return new Promise((e,r)=>{chrome.storage[this.method].clear(()=>{e()})})}}class BrowserStorage extends BaseStorage{async get(e){return browser.storage[this.method].get(e)}async set(e){return browser.storage[this.method].set(e)}}class ExtensionStorage{constructor(e){if("undefined"!=typeof browser&&void 0!==browser.runtime)return new BrowserStorage(e);if("undefined"!=typeof chrome&&chrome.storage)return new ChromeStorage(e);throw new Error("BrowserAPI: No storage found.")}}eagle.storage={sync:new ExtensionStorage("sync"),local:new ExtensionStorage("local")};