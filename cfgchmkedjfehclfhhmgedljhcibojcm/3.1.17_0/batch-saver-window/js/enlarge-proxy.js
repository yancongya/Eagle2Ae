class EnlargeProxy{callbackMap={};constructor(){this.callbackMap={}}async enlarge(l){return new Promise((e,a)=>{var r="enlarge-url-"+eagle.crypto.generateUUID();this.callbackMap[r]={resolve:e,reject:a},window.parent.postMessage({channel:"batchSaver.enlargeUrl",uuid:r,url:l},"*"),window.addEventListener("message",this.onMessage.bind(this))})}onMessage(e){var a,r,l,s;!1!==e.isTrusted&&e.source===window.parent&&(r=e.data.channel,a=e.data.uuid,"batchSaver.enlargeUrlResponse"===r)&&this.callbackMap[a]&&({resolve:r,reject:l}=this.callbackMap[a],{url:e,largeUrl:s}=e.data,window.removeEventListener("message",this),r({url:e,largeUrl:s}),this.callbackMap[a]=null,delete this.callbackMap[a])}}eagle.enlargeProxy=new EnlargeProxy;